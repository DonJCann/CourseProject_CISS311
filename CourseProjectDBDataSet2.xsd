<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="CourseProjectDBDataSet2" targetNamespace="http://tempuri.org/CourseProjectDBDataSet2.xsd" xmlns:mstns="http://tempuri.org/CourseProjectDBDataSet2.xsd" xmlns="http://tempuri.org/CourseProjectDBDataSet2.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="CourseProjectDBConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="CourseProjectDBConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.CourseProject_CISS_311.Properties.Settings.GlobalReference.Default.CourseProjectDBConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="coursesTableAdapter" GeneratorDataComponentClassName="coursesTableAdapter" Name="courses" UserDataComponentName="coursesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CourseProjectDBConnectionString (Settings)" DbObjectName="CourseProjectDB.dbo.courses" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[courses] WHERE (([courseId] = @Original_courseId) AND ([courseName] = @Original_courseName) AND ((@IsNull_courseSemester = 1 AND [courseSemester] IS NULL) OR ([courseSemester] = @Original_courseSemester)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_courseId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="courseId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_courseName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="courseName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_courseSemester" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="courseSemester" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_courseSemester" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="courseSemester" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[courses] ([courseId], [courseName], [courseSemester]) VALUES (@courseId, @courseName, @courseSemester);
SELECT courseId, courseName, courseSemester FROM courses WHERE (courseId = @courseId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@courseId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="courseId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@courseName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="courseName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@courseSemester" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="courseSemester" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT courseId, courseName, courseSemester FROM dbo.courses</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[courses] SET [courseId] = @courseId, [courseName] = @courseName, [courseSemester] = @courseSemester WHERE (([courseId] = @Original_courseId) AND ([courseName] = @Original_courseName) AND ((@IsNull_courseSemester = 1 AND [courseSemester] IS NULL) OR ([courseSemester] = @Original_courseSemester)));
SELECT courseId, courseName, courseSemester FROM courses WHERE (courseId = @courseId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@courseId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="courseId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@courseName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="courseName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@courseSemester" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="courseSemester" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_courseId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="courseId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_courseName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="courseName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_courseSemester" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="courseSemester" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_courseSemester" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="courseSemester" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="courseId" DataSetColumn="courseId" />
              <Mapping SourceColumn="courseName" DataSetColumn="courseName" />
              <Mapping SourceColumn="courseSemester" DataSetColumn="courseSemester" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="studentTableAdapter" GeneratorDataComponentClassName="studentTableAdapter" Name="student" UserDataComponentName="studentTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CourseProjectDBConnectionString (Settings)" DbObjectName="CourseProjectDB.dbo.student" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[student] WHERE (([studentId] = @Original_studentId) AND ([studentName] = @Original_studentName) AND ((@IsNull_coursesEnrolled = 1 AND [coursesEnrolled] IS NULL) OR ([coursesEnrolled] = @Original_coursesEnrolled)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_studentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="studentId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_studentName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="studentName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_coursesEnrolled" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="coursesEnrolled" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_coursesEnrolled" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="coursesEnrolled" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[student] ([studentId], [studentName], [coursesEnrolled]) VALUES (@studentId, @studentName, @coursesEnrolled);
SELECT studentId, studentName, coursesEnrolled FROM student WHERE (studentId = @studentId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@studentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="studentId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@studentName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="studentName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@coursesEnrolled" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="coursesEnrolled" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT studentId, studentName, coursesEnrolled FROM dbo.student</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[student] SET [studentId] = @studentId, [studentName] = @studentName, [coursesEnrolled] = @coursesEnrolled WHERE (([studentId] = @Original_studentId) AND ([studentName] = @Original_studentName) AND ((@IsNull_coursesEnrolled = 1 AND [coursesEnrolled] IS NULL) OR ([coursesEnrolled] = @Original_coursesEnrolled)));
SELECT studentId, studentName, coursesEnrolled FROM student WHERE (studentId = @studentId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@studentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="studentId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@studentName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="studentName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@coursesEnrolled" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="coursesEnrolled" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_studentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="studentId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_studentName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="studentName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_coursesEnrolled" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="coursesEnrolled" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_coursesEnrolled" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="coursesEnrolled" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="studentId" DataSetColumn="studentId" />
              <Mapping SourceColumn="studentName" DataSetColumn="studentName" />
              <Mapping SourceColumn="coursesEnrolled" DataSetColumn="coursesEnrolled" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="CourseProjectDBDataSet2" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="CourseProjectDBDataSet2" msprop:Generator_DataSetName="CourseProjectDBDataSet2">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="courses" msprop:Generator_RowEvHandlerName="coursesRowChangeEventHandler" msprop:Generator_RowDeletedName="coursesRowDeleted" msprop:Generator_RowDeletingName="coursesRowDeleting" msprop:Generator_RowEvArgName="coursesRowChangeEvent" msprop:Generator_TablePropName="courses" msprop:Generator_RowChangedName="coursesRowChanged" msprop:Generator_RowChangingName="coursesRowChanging" msprop:Generator_TableClassName="coursesDataTable" msprop:Generator_RowClassName="coursesRow" msprop:Generator_TableVarName="tablecourses" msprop:Generator_UserTableName="courses">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="courseId" msprop:Generator_ColumnPropNameInRow="courseId" msprop:Generator_ColumnPropNameInTable="courseIdColumn" msprop:Generator_ColumnVarNameInTable="columncourseId" msprop:Generator_UserColumnName="courseId" type="xs:int" />
              <xs:element name="courseName" msprop:Generator_ColumnPropNameInRow="courseName" msprop:Generator_ColumnPropNameInTable="courseNameColumn" msprop:Generator_ColumnVarNameInTable="columncourseName" msprop:Generator_UserColumnName="courseName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="courseSemester" msprop:Generator_ColumnPropNameInRow="courseSemester" msprop:Generator_ColumnPropNameInTable="courseSemesterColumn" msprop:Generator_ColumnVarNameInTable="columncourseSemester" msprop:Generator_UserColumnName="courseSemester" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="student" msprop:Generator_RowEvHandlerName="studentRowChangeEventHandler" msprop:Generator_RowDeletedName="studentRowDeleted" msprop:Generator_RowDeletingName="studentRowDeleting" msprop:Generator_RowEvArgName="studentRowChangeEvent" msprop:Generator_TablePropName="student" msprop:Generator_RowChangedName="studentRowChanged" msprop:Generator_RowChangingName="studentRowChanging" msprop:Generator_TableClassName="studentDataTable" msprop:Generator_RowClassName="studentRow" msprop:Generator_TableVarName="tablestudent" msprop:Generator_UserTableName="student">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="studentId" msprop:Generator_ColumnPropNameInRow="studentId" msprop:Generator_ColumnPropNameInTable="studentIdColumn" msprop:Generator_ColumnVarNameInTable="columnstudentId" msprop:Generator_UserColumnName="studentId" type="xs:int" />
              <xs:element name="studentName" msprop:Generator_ColumnPropNameInRow="studentName" msprop:Generator_ColumnPropNameInTable="studentNameColumn" msprop:Generator_ColumnVarNameInTable="columnstudentName" msprop:Generator_UserColumnName="studentName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="coursesEnrolled" msprop:Generator_ColumnPropNameInRow="coursesEnrolled" msprop:Generator_ColumnPropNameInTable="coursesEnrolledColumn" msprop:Generator_ColumnVarNameInTable="columncoursesEnrolled" msprop:Generator_UserColumnName="coursesEnrolled" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:courses" />
      <xs:field xpath="mstns:courseId" />
    </xs:unique>
    <xs:unique name="student_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:student" />
      <xs:field xpath="mstns:studentId" />
    </xs:unique>
  </xs:element>
</xs:schema>